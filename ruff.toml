# Ruff configuration for giskard-hub
# See https://docs.astral.sh/ruff/configuration/

# Target Python 3.9+ as specified in pyproject.toml
target-version = "py39"

# Line length to match black
line-length = 88

# Exclude common directories
exclude = [
    ".git",
    ".ruff_cache",
    ".venv",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
]

[lint]
# Enable comprehensive rule sets with focus on type hints
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # Pyflakes
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "SIM",  # flake8-simplify
    "I",    # isort
    "N",    # pep8-naming
    "C4",   # flake8-comprehensions
    "ICN",  # flake8-import-conventions
    "PIE",  # flake8-pie
    "PYI",  # flake8-pyi (type stubs)
    "Q",    # flake8-quotes
    "RSE",  # flake8-raise
    "RET",  # flake8-return
    "TID",  # flake8-tidy-imports
    "TCH",  # flake8-type-checking
    "PTH",  # flake8-use-pathlib
    "ANN",  # flake8-annotations (type hints)
]

# Ignore specific rules that might be too strict
ignore = [
    "E501",    # Line too long (handled by formatter)
    "ANN101",  # Missing type annotation for self in method
    "ANN102",  # Missing type annotation for cls in classmethod
    "ANN401",  # Dynamically typed expressions (Any) are disallowed
    "UP007",   # Use X | Y for type unions (keeping Optional for compatibility)
]

# Enable auto-fixing for safe rules
fixable = [
    "F",    # Pyflakes
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "SIM",  # flake8-simplify
    "C4",   # flake8-comprehensions
    "PIE",  # flake8-pie
    "Q",    # flake8-quotes
    "RET",  # flake8-return
    "TCH",  # flake8-type-checking
    "PTH",  # flake8-use-pathlib
]

unfixable = [
    "F841",  # Unused variables (requires careful review)
    "B904",  # Raise without from inside except (needs context)
]

[lint.per-file-ignores]
# Test files can have additional flexibility
"**/tests/**/*.py" = [
    "S101",     # Use of assert
    "PLR2004",  # Magic value used in comparison
    "ANN",      # Skip type annotations in tests
]

# Configuration files
"**/conf.py" = ["ANN"]

[lint.isort]
# Import organization
known-first-party = ["giskard_hub"]
force-sort-within-sections = true
split-on-trailing-comma = true

[lint.mccabe]
# Maximum complexity
max-complexity = 10

[format]
# Use double quotes for strings
quote-style = "double"
# Use Unix line endings
line-ending = "lf"
# Respect magic trailing comma
skip-magic-trailing-comma = false
