name: Start a new release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Tag to be created (e.g., 1.2.3 or 2.0.0b4)"
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ inputs.version }}
    steps:
      - name: Validate version input
        shell: bash
        run: |
          set -euo pipefail
          if [[ ! "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+[A-Za-z0-9.+-]*$ ]]; then
            echo "Invalid version: '$VERSION'. Expected X.Y.Z optionally followed by letters/digits (e.g., 2.0.0b4)" >&2
            exit 1
          fi
      - name: Check if organization member
        id: is_organization_member
        uses: JamesSingleton/is-organization-member@311430b0670cdec4036e721029b78018236a0b74 # 1.1.0
        with:
          organization: Giskard-AI
          username: ${{ github.actor }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Interrupt job
        if: ${{ steps.is_organization_member.outputs.result == 'false' }}
        shell: bash
        run: |
          echo "Job failed due to user not being a member of Giskard-AI organization and the 'safe for build' label not being set on the PR"
          exit 1

      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-tags: true
          ref: main
          token: ${{ secrets.RELEASE_PAT_TOKEN }} # Needed to trigger other actions

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@2ddd2b9cb38ad8efd50337e8ab201519a34c9f24 # v7.1.1
        with:
          python-version: "3.13"

      - name: Change version
        run: |
          set -euo pipefail
          uv version "${VERSION}"

      - name: Build release candidate wheel
        run: uv build

      - name: Configure git
        run: |
          git config --global user.name 'BotReleaser'
          git config --global user.email 'bot.releaser@users.noreply.github.com'

      - name: Adding file
        run: |
          git add pyproject.toml uv.lock
          git fetch --quiet --tags
          git commit -m "v${VERSION}" --allow-empty
          git tag "v${VERSION}"

      - name: Push to main and tags
        run: |
          set -euo pipefail
          git push origin main
          git push origin "v${VERSION}"

      - name: Create Github Release
        id: github-release
        uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090 # v2
        with:
          tag_name: v${{ env.VERSION }}
          fail_on_unmatched_files: true
          generate_release_notes: true
          files: |
              dist/giskard_hub-*.tar.gz
              dist/giskard_hub-*.whl

      - name: Push to Pipy
        env:
          PIPY_USERNAME: ${{ secrets.PIPY_USERNAME }}
          PIPY_PASSWORD: ${{ secrets.PIPY_PASSWORD }}
        run: uv publish --username "$PIPY_USERNAME" --password "$PIPY_PASSWORD"
