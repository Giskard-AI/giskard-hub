[tool.poetry]
name = "giskard-hub"
version = "1.2.5"
description = "The giskard_hub library allows you to interact with the Giskard Hub, a platform that centralizes the validation process of LLM applications, empowering product teams to ensure all functional, business & legal requirements are met, and keeping them in close contact with the development team to avoid delayed deployment timelines."
authors = ["Giskard Team <hello@giskard.ai>"]
readme = "README.md"
packages = [{ include = "giskard_hub", from = "src" }]
repository = "https://github.com/Giskard-AI/giskard-hub"
homepage = "https://github.com/Giskard-AI/giskard-hub"
documentation = "https://docs-hub.giskard.ai/"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
httpx = ">=0.27.0,<1" # See https://python-poetry.org/docs/dependency-specification/#caret-requirements
rich = "^13.7.1"
python-dateutil = "^2.9.0.post0"


[tool.poetry.group.dev.dependencies]
sphinxawesome-theme = "5.2.0"
myst-parser = "3.0.1"
notebook = "7.4.4"
nbsphinx = "0.9.7"
black = {extras = ["jupyter"], version = "25.1.0"}
isort = "6.0.1"
pylint = "3.3.7"
sphinx-click = "6.0.0"
sphinx-autobuild = "2024.10.3"
sphinx-autodoc-typehints = "2.3.0"
sphinx-design = "0.6.1"
pytest = "8.4.1"
pre-commit = "^4.0.1"
ruff = "^0.8.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
extend_skip_glob = [".history/*"]

[tool.pylint.master]
fail-under = "10"

[tool.pylint.reports]
reports = "y"
output-format = "colorized"

[tool.pylint.'MESSAGES CONTROL']
disable = "missing-function-docstring,missing-class-docstring,missing-module-docstring,line-too-long,too-few-public-methods"
enable = ["useless-suppression", "use-symbolic-message-instead"]

[tool.ruff]
# Ruff configuration (main config in ruff.toml)
# This section for Poetry compatibility
target-version = "py39"
line-length = 88

[tool.ruff.lint]
select = ["E", "W", "F", "UP", "B", "SIM", "I", "N", "C4", "ICN", "PIE", "PYI", "Q", "RSE", "RET", "TID", "TCH", "PTH", "ANN"]
ignore = ["E501", "ANN101", "ANN102", "ANN401", "UP007"]

[tool.mypy]
# MyPy configuration for type checking
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
check_untyped_defs = false
